0 <= time <=  1440 (1 day = 1440 minutes)
distance = time
taxi = max 4 customers

look for 2+ customers starting at the same node and that have same destination? 
 => don't exist so no use to do this!

sort customers, don't take randomly
 => type of sort?
    1: close to start, early pickup
    2: far from start, early pickup
    3: close to start, late pickup
    4: far from start, late pickup
    implemented: early pickup as minimum in sort
    
IDEA: distance can be calculated from the start to the customer
 ! distance = time
 => EarlyTimeOfPickup - distance = most early time to depart at start
 use this as sorting basis?
 
when calculated a path and transporting a customer, check at every node if
there is a customer that can be picked up and must go to the same destination?
